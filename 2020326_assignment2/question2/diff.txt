diff --git a/arch/x86/entry/syscalls/syscall_64.tbl b/arch/x86/entry/syscalls/syscall_64.tbl
index f6b5779..86d340c 100644
--- a/arch/x86/entry/syscalls/syscall_64.tbl
+++ b/arch/x86/entry/syscalls/syscall_64.tbl
@@ -369,6 +369,7 @@
 445	common	landlock_add_rule	sys_landlock_add_rule
 446	common	landlock_restrict_self	sys_landlock_restrict_self
 447	common	memfd_secret		sys_memfd_secret
+448	common	kernel_2d_memcpy	sys_kernel_2d_memcpy
 
 #
 # Due to a historical design error, certain syscalls are numbered differently
diff --git a/kernel/sys.c b/kernel/sys.c
index ef1a78f..57a0de6 100644
--- a/kernel/sys.c
+++ b/kernel/sys.c
@@ -200,6 +200,14 @@ static int set_one_prio(struct task_struct *p, int niceval, int error)
 	return error;
 }
 
+SYSCALL_DEFINE4(kernel_2d_memcpy, float*, mat1, float*, mat2, int, row, int, col)
+{
+	float temp[row][col];
+    copy_from_user((void*)temp,(void __user*)mat1,sizeof(temp));
+    copy_to_user((void __user*)mat2,(void*)temp,sizeof(temp));
+	return 0;
+}
+
 SYSCALL_DEFINE3(setpriority, int, which, int, who, int, niceval)
 {
 	struct task_struct *g, *p;
